library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

entity timer is
port(
	clk:in std_logic;
	reset:in std_logic;
	HEX0,HEX1,HEX2,HEX3:out std_logic_vector(7 downto 0);
);

architecture timer of timer is
type int_array is Array(0 to 3) of integer range 0 to 9;
type logic_array is Array(0 to 3) of std_logic_vector(3 downto 0);
signal num_int:int_array;
signal num_logic:logic_array;

signal div_counter:std_logic_vector(22 downto 0);
signal num_counter:std_logic_vector(13 downto 0); --0000~9999

signal divided_clk:std_logic;
begin	
	process(clk,reset) begin
		if(reset='0') then
			div_counter <= (others=>'0');
		elsif(rising_edge) then
			div_counter <= div_counter + 1;
		end if;
	end process;

	divided_clk <= div_counter(17);
	
	
	
end timer;