vendor_name = ModelSim
source_file = 1, C:/Users/choug/fpgaProjects/ntou-vhdl/register_ex/seven_seg_decoder.vhd
source_file = 1, C:/Users/choug/fpgaProjects/ntou-vhdl/register_ex/register_ex.vhd
source_file = 1, C:/Users/choug/fpgaProjects/ntou-vhdl/register_ex/db/register_ex.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = register_ex
instance = comp, \hex0[0]~output\, hex0[0]~output, register_ex, 1
instance = comp, \hex0[1]~output\, hex0[1]~output, register_ex, 1
instance = comp, \hex0[2]~output\, hex0[2]~output, register_ex, 1
instance = comp, \hex0[3]~output\, hex0[3]~output, register_ex, 1
instance = comp, \hex0[4]~output\, hex0[4]~output, register_ex, 1
instance = comp, \hex0[5]~output\, hex0[5]~output, register_ex, 1
instance = comp, \hex0[6]~output\, hex0[6]~output, register_ex, 1
instance = comp, \hex0[7]~output\, hex0[7]~output, register_ex, 1
instance = comp, \hex1[0]~output\, hex1[0]~output, register_ex, 1
instance = comp, \hex1[1]~output\, hex1[1]~output, register_ex, 1
instance = comp, \hex1[2]~output\, hex1[2]~output, register_ex, 1
instance = comp, \hex1[3]~output\, hex1[3]~output, register_ex, 1
instance = comp, \hex1[4]~output\, hex1[4]~output, register_ex, 1
instance = comp, \hex1[5]~output\, hex1[5]~output, register_ex, 1
instance = comp, \hex1[6]~output\, hex1[6]~output, register_ex, 1
instance = comp, \hex1[7]~output\, hex1[7]~output, register_ex, 1
instance = comp, \sel[1]~input\, sel[1]~input, register_ex, 1
instance = comp, \sel[0]~input\, sel[0]~input, register_ex, 1
instance = comp, \clk~input\, clk~input, register_ex, 1
instance = comp, \data[3]~input\, data[3]~input, register_ex, 1
instance = comp, \reset~input\, reset~input, register_ex, 1
instance = comp, \Equal0~2\, Equal0~2, register_ex, 1
instance = comp, \A[3]\, A[3], register_ex, 1
instance = comp, \B[3]~feeder\, B[3]~feeder, register_ex, 1
instance = comp, \Equal0~1\, Equal0~1, register_ex, 1
instance = comp, \B[3]\, B[3], register_ex, 1
instance = comp, \mux_out[3]~2\, mux_out[3]~2, register_ex, 1
instance = comp, \D[0]~0\, D[0]~0, register_ex, 1
instance = comp, \D[3]\, D[3], register_ex, 1
instance = comp, \Equal0~0\, Equal0~0, register_ex, 1
instance = comp, \C[3]\, C[3], register_ex, 1
instance = comp, \mux_out[3]~3\, mux_out[3]~3, register_ex, 1
instance = comp, \data[2]~input\, data[2]~input, register_ex, 1
instance = comp, \A[2]\, A[2], register_ex, 1
instance = comp, \C[2]~feeder\, C[2]~feeder, register_ex, 1
instance = comp, \C[2]\, C[2], register_ex, 1
instance = comp, \mux_out[2]~4\, mux_out[2]~4, register_ex, 1
instance = comp, \D[2]\, D[2], register_ex, 1
instance = comp, \B[2]~feeder\, B[2]~feeder, register_ex, 1
instance = comp, \B[2]\, B[2], register_ex, 1
instance = comp, \mux_out[2]~5\, mux_out[2]~5, register_ex, 1
instance = comp, \data[1]~input\, data[1]~input, register_ex, 1
instance = comp, \B[1]~feeder\, B[1]~feeder, register_ex, 1
instance = comp, \B[1]\, B[1], register_ex, 1
instance = comp, \C[1]~feeder\, C[1]~feeder, register_ex, 1
instance = comp, \C[1]\, C[1], register_ex, 1
instance = comp, \A[1]\, A[1], register_ex, 1
instance = comp, \mux_out[1]~6\, mux_out[1]~6, register_ex, 1
instance = comp, \D[1]\, D[1], register_ex, 1
instance = comp, \mux_out[1]~7\, mux_out[1]~7, register_ex, 1
instance = comp, \data[0]~input\, data[0]~input, register_ex, 1
instance = comp, \A[0]\, A[0], register_ex, 1
instance = comp, \B[0]~feeder\, B[0]~feeder, register_ex, 1
instance = comp, \B[0]\, B[0], register_ex, 1
instance = comp, \mux_out[0]~0\, mux_out[0]~0, register_ex, 1
instance = comp, \D[0]\, D[0], register_ex, 1
instance = comp, \C[0]\, C[0], register_ex, 1
instance = comp, \mux_out[0]~1\, mux_out[0]~1, register_ex, 1
instance = comp, \dec0|decoded_out[0]~0\, dec0|decoded_out[0]~0, register_ex, 1
instance = comp, \dec0|decoded_out[1]~1\, dec0|decoded_out[1]~1, register_ex, 1
instance = comp, \dec0|decoded_out[2]~2\, dec0|decoded_out[2]~2, register_ex, 1
instance = comp, \dec0|decoded_out[3]~3\, dec0|decoded_out[3]~3, register_ex, 1
instance = comp, \dec0|decoded_out[4]~4\, dec0|decoded_out[4]~4, register_ex, 1
instance = comp, \dec0|decoded_out[5]~5\, dec0|decoded_out[5]~5, register_ex, 1
instance = comp, \dec0|decoded_out[6]~6\, dec0|decoded_out[6]~6, register_ex, 1
instance = comp, \data[6]~input\, data[6]~input, register_ex, 1
instance = comp, \B[6]\, B[6], register_ex, 1
instance = comp, \D[6]\, D[6], register_ex, 1
instance = comp, \A[6]\, A[6], register_ex, 1
instance = comp, \C[6]\, C[6], register_ex, 1
instance = comp, \mux_out[6]~12\, mux_out[6]~12, register_ex, 1
instance = comp, \mux_out[6]~13\, mux_out[6]~13, register_ex, 1
instance = comp, \data[7]~input\, data[7]~input, register_ex, 1
instance = comp, \A[7]\, A[7], register_ex, 1
instance = comp, \B[7]\, B[7], register_ex, 1
instance = comp, \mux_out[7]~10\, mux_out[7]~10, register_ex, 1
instance = comp, \D[7]\, D[7], register_ex, 1
instance = comp, \C[7]~feeder\, C[7]~feeder, register_ex, 1
instance = comp, \C[7]\, C[7], register_ex, 1
instance = comp, \mux_out[7]~11\, mux_out[7]~11, register_ex, 1
instance = comp, \data[4]~input\, data[4]~input, register_ex, 1
instance = comp, \A[4]\, A[4], register_ex, 1
instance = comp, \B[4]~feeder\, B[4]~feeder, register_ex, 1
instance = comp, \B[4]\, B[4], register_ex, 1
instance = comp, \mux_out[4]~8\, mux_out[4]~8, register_ex, 1
instance = comp, \D[4]\, D[4], register_ex, 1
instance = comp, \C[4]\, C[4], register_ex, 1
instance = comp, \mux_out[4]~9\, mux_out[4]~9, register_ex, 1
instance = comp, \data[5]~input\, data[5]~input, register_ex, 1
instance = comp, \C[5]\, C[5], register_ex, 1
instance = comp, \A[5]\, A[5], register_ex, 1
instance = comp, \mux_out[5]~14\, mux_out[5]~14, register_ex, 1
instance = comp, \B[5]\, B[5], register_ex, 1
instance = comp, \D[5]\, D[5], register_ex, 1
instance = comp, \mux_out[5]~15\, mux_out[5]~15, register_ex, 1
instance = comp, \dec1|decoded_out[0]~0\, dec1|decoded_out[0]~0, register_ex, 1
instance = comp, \dec1|decoded_out[1]~1\, dec1|decoded_out[1]~1, register_ex, 1
instance = comp, \dec1|decoded_out[2]~2\, dec1|decoded_out[2]~2, register_ex, 1
instance = comp, \dec1|decoded_out[3]~3\, dec1|decoded_out[3]~3, register_ex, 1
instance = comp, \dec1|decoded_out[4]~4\, dec1|decoded_out[4]~4, register_ex, 1
instance = comp, \dec1|decoded_out[5]~5\, dec1|decoded_out[5]~5, register_ex, 1
instance = comp, \dec1|decoded_out[6]~6\, dec1|decoded_out[6]~6, register_ex, 1
