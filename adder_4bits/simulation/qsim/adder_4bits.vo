// Copyright (C) 1991-2014 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.4 Build 182 03/12/2014 SJ Web Edition"

// DATE "10/10/2021 14:29:56"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module adder_4bits (
	A,
	B,
	S,
	C);
input 	[3:0] A;
input 	[3:0] B;
output 	[3:0] S;
output 	C;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S[0]~output_o ;
wire \S[1]~output_o ;
wire \S[2]~output_o ;
wire \S[3]~output_o ;
wire \C~output_o ;
wire \B[0]~input_o ;
wire \A[0]~input_o ;
wire \Add0~0_combout ;
wire \B[1]~input_o ;
wire \A[1]~input_o ;
wire \Add0~1 ;
wire \Add0~2_combout ;
wire \B[2]~input_o ;
wire \A[2]~input_o ;
wire \Add0~3 ;
wire \Add0~4_combout ;
wire \B[3]~input_o ;
wire \A[3]~input_o ;
wire \Add0~5 ;
wire \Add0~6_combout ;
wire \Add0~7 ;
wire \Add0~8_combout ;


cycloneiv_io_obuf \S[0]~output (
	.i(\Add0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[1]~output (
	.i(\Add0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[2]~output (
	.i(\Add0~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[3]~output (
	.i(\Add0~6_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \C~output (
	.i(\Add0~8_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C~output_o ),
	.obar());
// synopsys translate_off
defparam \C~output .bus_hold = "false";
defparam \C~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~0 (
// Equation(s):
// \Add0~0_combout  = (\B[0]~input_o  & (\A[0]~input_o  $ (VCC))) # (!\B[0]~input_o  & (\A[0]~input_o  & VCC))
// \Add0~1  = CARRY((\B[0]~input_o  & \A[0]~input_o ))

	.dataa(\B[0]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\Add0~0_combout ),
	.cout(\Add0~1 ));
// synopsys translate_off
defparam \Add0~0 .lut_mask = 16'h6688;
defparam \Add0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~2 (
// Equation(s):
// \Add0~2_combout  = (\B[1]~input_o  & ((\A[1]~input_o  & (\Add0~1  & VCC)) # (!\A[1]~input_o  & (!\Add0~1 )))) # (!\B[1]~input_o  & ((\A[1]~input_o  & (!\Add0~1 )) # (!\A[1]~input_o  & ((\Add0~1 ) # (GND)))))
// \Add0~3  = CARRY((\B[1]~input_o  & (!\A[1]~input_o  & !\Add0~1 )) # (!\B[1]~input_o  & ((!\Add0~1 ) # (!\A[1]~input_o ))))

	.dataa(\B[1]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~1 ),
	.combout(\Add0~2_combout ),
	.cout(\Add0~3 ));
// synopsys translate_off
defparam \Add0~2 .lut_mask = 16'h9617;
defparam \Add0~2 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneiv_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~4 (
// Equation(s):
// \Add0~4_combout  = ((\B[2]~input_o  $ (\A[2]~input_o  $ (!\Add0~3 )))) # (GND)
// \Add0~5  = CARRY((\B[2]~input_o  & ((\A[2]~input_o ) # (!\Add0~3 ))) # (!\B[2]~input_o  & (\A[2]~input_o  & !\Add0~3 )))

	.dataa(\B[2]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~3 ),
	.combout(\Add0~4_combout ),
	.cout(\Add0~5 ));
// synopsys translate_off
defparam \Add0~4 .lut_mask = 16'h698E;
defparam \Add0~4 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneiv_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~6 (
// Equation(s):
// \Add0~6_combout  = (\B[3]~input_o  & ((\A[3]~input_o  & (\Add0~5  & VCC)) # (!\A[3]~input_o  & (!\Add0~5 )))) # (!\B[3]~input_o  & ((\A[3]~input_o  & (!\Add0~5 )) # (!\A[3]~input_o  & ((\Add0~5 ) # (GND)))))
// \Add0~7  = CARRY((\B[3]~input_o  & (!\A[3]~input_o  & !\Add0~5 )) # (!\B[3]~input_o  & ((!\Add0~5 ) # (!\A[3]~input_o ))))

	.dataa(\B[3]~input_o ),
	.datab(\A[3]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~5 ),
	.combout(\Add0~6_combout ),
	.cout(\Add0~7 ));
// synopsys translate_off
defparam \Add0~6 .lut_mask = 16'h9617;
defparam \Add0~6 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~8 (
// Equation(s):
// \Add0~8_combout  = !\Add0~7 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\Add0~7 ),
	.combout(\Add0~8_combout ),
	.cout());
// synopsys translate_off
defparam \Add0~8 .lut_mask = 16'h0F0F;
defparam \Add0~8 .sum_lutc_input = "cin";
// synopsys translate_on

assign S[0] = \S[0]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[3] = \S[3]~output_o ;

assign C = \C~output_o ;

endmodule
