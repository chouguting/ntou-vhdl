|generic_shift_register_8bit
D_in => generic_shift_register:sft_reg_1.D_in
L_R => generic_shift_register:sft_reg_1.L_R
clk => generic_shift_register:sft_reg_1.clk
reset => generic_shift_register:sft_reg_1.reset
Q[0] << generic_shift_register:sft_reg_1.Q[0]
Q[1] << generic_shift_register:sft_reg_1.Q[1]
Q[2] << generic_shift_register:sft_reg_1.Q[2]
Q[3] << generic_shift_register:sft_reg_1.Q[3]
Q[4] << generic_shift_register:sft_reg_1.Q[4]
Q[5] << generic_shift_register:sft_reg_1.Q[5]
Q[6] << generic_shift_register:sft_reg_1.Q[6]
Q[7] << generic_shift_register:sft_reg_1.Q[7]


|generic_shift_register_8bit|generic_shift_register:sft_reg_1
D_in => mid_data[7].DATAA
D_in => mid_data[0].DATAB
L_R => mid_data[7].OUTPUTSELECT
L_R => mid_data[6].OUTPUTSELECT
L_R => mid_data[5].OUTPUTSELECT
L_R => mid_data[4].OUTPUTSELECT
L_R => mid_data[3].OUTPUTSELECT
L_R => mid_data[2].OUTPUTSELECT
L_R => mid_data[1].OUTPUTSELECT
L_R => mid_data[0].OUTPUTSELECT
clk => register_1bit:shift_reg:0:DFF0:D0.clk
clk => register_1bit:shift_reg:1:DFFx:Dx.clk
clk => register_1bit:shift_reg:2:DFFx:Dx.clk
clk => register_1bit:shift_reg:3:DFFx:Dx.clk
clk => register_1bit:shift_reg:4:DFFx:Dx.clk
clk => register_1bit:shift_reg:5:DFFx:Dx.clk
clk => register_1bit:shift_reg:6:DFFx:Dx.clk
clk => register_1bit:shift_reg:7:DFFx:Dx.clk
reset => register_1bit:shift_reg:0:DFF0:D0.reset
reset => register_1bit:shift_reg:1:DFFx:Dx.reset
reset => register_1bit:shift_reg:2:DFFx:Dx.reset
reset => register_1bit:shift_reg:3:DFFx:Dx.reset
reset => register_1bit:shift_reg:4:DFFx:Dx.reset
reset => register_1bit:shift_reg:5:DFFx:Dx.reset
reset => register_1bit:shift_reg:6:DFFx:Dx.reset
reset => register_1bit:shift_reg:7:DFFx:Dx.reset
Q[0] <= register_1bit:shift_reg:0:DFF0:D0.D_out
Q[1] <= register_1bit:shift_reg:1:DFFx:Dx.D_out
Q[2] <= register_1bit:shift_reg:2:DFFx:Dx.D_out
Q[3] <= register_1bit:shift_reg:3:DFFx:Dx.D_out
Q[4] <= register_1bit:shift_reg:4:DFFx:Dx.D_out
Q[5] <= register_1bit:shift_reg:5:DFFx:Dx.D_out
Q[6] <= register_1bit:shift_reg:6:DFFx:Dx.D_out
Q[7] <= register_1bit:shift_reg:7:DFFx:Dx.D_out


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:0:DFF0:D0
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:1:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:2:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:3:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:4:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:5:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:6:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|generic_shift_register_8bit|generic_shift_register:sft_reg_1|register_1bit:\shift_reg:7:DFFx:Dx
clk => D_out~reg0.CLK
reset => D_out~reg0.ACLR
D_in => D_out~reg0.DATAIN
D_out <= D_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


