// Copyright (C) 1991-2014 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.4 Build 182 03/12/2014 SJ Web Edition"

// DATE "09/24/2021 15:36:53"

// 
// Device: Altera EP3C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module adder_1bit (
	A,
	B,
	C,
	S,
	c_out);
input 	A;
input 	B;
input 	C;
output 	S;
output 	c_out;

// Design Ports Information
// S	=>  Location: PIN_N1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c_out	=>  Location: PIN_R4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_L6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// C	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S~output_o ;
wire \c_out~output_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \C~input_o ;
wire \S~0_combout ;
wire \c_out~0_combout ;


// Location: IOOBUF_X0_Y7_N23
cycloneiii_io_obuf \S~output (
	.i(\S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S~output_o ),
	.obar());
// synopsys translate_off
defparam \S~output .bus_hold = "false";
defparam \S~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneiii_io_obuf \c_out~output (
	.i(\c_out~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c_out~output_o ),
	.obar());
// synopsys translate_off
defparam \c_out~output .bus_hold = "false";
defparam \c_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N22
cycloneiii_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneiii_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N15
cycloneiii_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N24
cycloneiii_lcell_comb \S~0 (
// Equation(s):
// \S~0_combout  = \A~input_o  $ (\B~input_o  $ (\C~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\B~input_o ),
	.datad(\C~input_o ),
	.cin(gnd),
	.combout(\S~0_combout ),
	.cout());
// synopsys translate_off
defparam \S~0 .lut_mask = 16'hA55A;
defparam \S~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneiii_lcell_comb \c_out~0 (
// Equation(s):
// \c_out~0_combout  = (\A~input_o  & ((\B~input_o ) # (\C~input_o ))) # (!\A~input_o  & (\B~input_o  & \C~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\B~input_o ),
	.datad(\C~input_o ),
	.cin(gnd),
	.combout(\c_out~0_combout ),
	.cout());
// synopsys translate_off
defparam \c_out~0 .lut_mask = 16'hFAA0;
defparam \c_out~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign S = \S~output_o ;

assign c_out = \c_out~output_o ;

endmodule
