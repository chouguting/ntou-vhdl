library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity connected_shifter is
port(
	clk_org:in std_logic;
	reset_in:in std_logic;
	clk_in:in std_logic;
	data_in:in std_logic;
	data_out:out std_logic;
	clk1,clk2,reset1,reset2:out std_logic;
	data:out std_logic:
	LED:buffer std_logic_vector(9 downto 0)
);
end connected_shifter;

architecture shifter of connected_shifter is
signal div_500000_counter:std_logic_vector(18 downto 0); --1111010000100100000
signal clk_100Hz:std_logic;
begin
	process(clk_org,reset_in) begin
		if(reset_in='0') then
			div_500000_counter <= (others=>'0');
		elsif(rising_edge(clk_org)) then
			if(div_500000_counter = "1111010000100100000"-1) then
				div_500000_counter <= (others=>'0');
			else	
				div_500000_counter <= div_500000_counter + 1;
			end if;
		end if;
	end process;
	
	clk_100Hz <= div_500000_counter(18);
	
	process(clk_in,reset_in) begin
		if(reset_in='0') then
			LED <= (others=>'0');
		elsif(rising_edge(clk_in)) then
			LED <= data_in&LED(9 downto 1);
		end if;
	end process;

end shifter;