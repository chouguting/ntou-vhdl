// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "10/30/2021 13:24:27"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module div_20 (
	clk,
	rst,
	P);
input 	clk;
input 	rst;
output 	P;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \P~output_o ;
wire \clk~input_o ;
wire \Add0~0_combout ;
wire \rst~input_o ;
wire \Add0~1 ;
wire \Add0~2_combout ;
wire \Add0~3 ;
wire \Add0~4_combout ;
wire \Add0~5 ;
wire \Add0~6_combout ;
wire \Add0~7 ;
wire \Add0~8_combout ;
wire \cnt~1_combout ;
wire \Equal0~0_combout ;
wire \cnt~0_combout ;
wire \LessThan0~0_combout ;
wire [4:0] cnt;


cycloneiv_io_obuf \P~output (
	.i(!\LessThan0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\P~output_o ),
	.obar());
// synopsys translate_off
defparam \P~output .bus_hold = "false";
defparam \P~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~0 (
// Equation(s):
// \Add0~0_combout  = cnt[0] $ (VCC)
// \Add0~1  = CARRY(cnt[0])

	.dataa(cnt[0]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\Add0~0_combout ),
	.cout(\Add0~1 ));
// synopsys translate_off
defparam \Add0~0 .lut_mask = 16'h55AA;
defparam \Add0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \cnt[0] (
	.clk(\clk~input_o ),
	.d(\Add0~0_combout ),
	.asdata(vcc),
	.clrn(!\rst~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[0] .is_wysiwyg = "true";
defparam \cnt[0] .power_up = "low";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~2 (
// Equation(s):
// \Add0~2_combout  = (cnt[1] & (!\Add0~1 )) # (!cnt[1] & ((\Add0~1 ) # (GND)))
// \Add0~3  = CARRY((!\Add0~1 ) # (!cnt[1]))

	.dataa(cnt[1]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~1 ),
	.combout(\Add0~2_combout ),
	.cout(\Add0~3 ));
// synopsys translate_off
defparam \Add0~2 .lut_mask = 16'h5A5F;
defparam \Add0~2 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \cnt[1] (
	.clk(\clk~input_o ),
	.d(\Add0~2_combout ),
	.asdata(vcc),
	.clrn(!\rst~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[1] .is_wysiwyg = "true";
defparam \cnt[1] .power_up = "low";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~4 (
// Equation(s):
// \Add0~4_combout  = (cnt[2] & (\Add0~3  $ (GND))) # (!cnt[2] & (!\Add0~3  & VCC))
// \Add0~5  = CARRY((cnt[2] & !\Add0~3 ))

	.dataa(cnt[2]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~3 ),
	.combout(\Add0~4_combout ),
	.cout(\Add0~5 ));
// synopsys translate_off
defparam \Add0~4 .lut_mask = 16'hA50A;
defparam \Add0~4 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~6 (
// Equation(s):
// \Add0~6_combout  = (cnt[3] & (!\Add0~5 )) # (!cnt[3] & ((\Add0~5 ) # (GND)))
// \Add0~7  = CARRY((!\Add0~5 ) # (!cnt[3]))

	.dataa(cnt[3]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~5 ),
	.combout(\Add0~6_combout ),
	.cout(\Add0~7 ));
// synopsys translate_off
defparam \Add0~6 .lut_mask = 16'h5A5F;
defparam \Add0~6 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \cnt[3] (
	.clk(\clk~input_o ),
	.d(\Add0~6_combout ),
	.asdata(vcc),
	.clrn(!\rst~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[3] .is_wysiwyg = "true";
defparam \cnt[3] .power_up = "low";
// synopsys translate_on

cycloneiv_lcell_comb \Add0~8 (
// Equation(s):
// \Add0~8_combout  = cnt[4] $ (!\Add0~7 )

	.dataa(cnt[4]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\Add0~7 ),
	.combout(\Add0~8_combout ),
	.cout());
// synopsys translate_off
defparam \Add0~8 .lut_mask = 16'hA5A5;
defparam \Add0~8 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneiv_lcell_comb \cnt~1 (
// Equation(s):
// \cnt~1_combout  = \Add0~8_combout  $ (((cnt[1] & \Equal0~0_combout )))

	.dataa(gnd),
	.datab(\Add0~8_combout ),
	.datac(cnt[1]),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\cnt~1_combout ),
	.cout());
// synopsys translate_off
defparam \cnt~1 .lut_mask = 16'h3CCC;
defparam \cnt~1 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \cnt[4] (
	.clk(\clk~input_o ),
	.d(\cnt~1_combout ),
	.asdata(vcc),
	.clrn(!\rst~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[4]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[4] .is_wysiwyg = "true";
defparam \cnt[4] .power_up = "low";
// synopsys translate_on

cycloneiv_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (cnt[4] & (cnt[0] & (!cnt[3] & !cnt[2])))

	.dataa(cnt[4]),
	.datab(cnt[0]),
	.datac(cnt[3]),
	.datad(cnt[2]),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0008;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \cnt~0 (
// Equation(s):
// \cnt~0_combout  = \Add0~4_combout  $ (((cnt[1] & \Equal0~0_combout )))

	.dataa(gnd),
	.datab(\Add0~4_combout ),
	.datac(cnt[1]),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\cnt~0_combout ),
	.cout());
// synopsys translate_off
defparam \cnt~0 .lut_mask = 16'h3CCC;
defparam \cnt~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \cnt[2] (
	.clk(\clk~input_o ),
	.d(\cnt~0_combout ),
	.asdata(vcc),
	.clrn(!\rst~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[2] .is_wysiwyg = "true";
defparam \cnt[2] .power_up = "low";
// synopsys translate_on

cycloneiv_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (!cnt[4] & (((!cnt[2] & !cnt[1])) # (!cnt[3])))

	.dataa(cnt[2]),
	.datab(cnt[1]),
	.datac(cnt[3]),
	.datad(cnt[4]),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h001F;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign P = \P~output_o ;

endmodule
